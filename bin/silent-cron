#!/usr/bin/perl

use 5.014;
use strict;
use warnings;

use Getopt::Long;
use File::Basename qw(basename);
use IPC::Run qw(run);
use Data::Dumper;
use Time::Piece qw(localtime);
use SilentCron::Storage::SQLite;
use SilentCron::JobRun;

sub usage {
    print <<USAGE;
Usage: ${\basename($0)} \
    [ --ok=2/10 ]
    [ --job-name=my-job-name ]
    -- command to run
USAGE
}

GetOptions(
    'ok|o=s'            => \(my $MustSucceed = '2/10'),
    'job-name|n=s'      => \my $JobName,
    'debug!'            => \my $Debug,
) or die usage();

unless (@ARGV) {
    say "Need a command to run!\n";
    die usage();
}
$JobName //= join ' ', @ARGV;

my ( $MinSuccess, $Total );

if ( $MustSucceed =~ / ^ (\d+) \/ (\d+) $ /x ) {
    $MinSuccess = $1;
    $Total      = $2;
}
else {
    die qq[Invalid argument --ok or -o: "$MustSucceed". Should be in the from <number>/<number>.\n];
}

my $out;

my $timestamp_before = localtime;
say STDERR "DEBUG: Executing @ARGV"
    if $Debug;
run \@ARGV, \'', \$out, \$out;
my $exit_code = $? >> 8;
my $timestamp_after = localtime;
if ( $Debug ) {
    printf STDERR "DEBUG: %s finished with exit code %d and %d bytes of output/error\n",
        $ARGV[0],
        $exit_code,
        length($out);
}

my $backend = SilentCron::Storage::SQLite->new(
    debug => $Debug,
);

my $run = SilentCron::JobRun->new(
    job_name        => $JobName,
    output          => $out,
    exit_code       => $exit_code,
    start_time      => $timestamp_before,
    end_time        => $timestamp_after,
);

$backend->record($run);

unless ( $run->is_success ) {
    my @jobs = grep $_->id != $run->id, $backend->list(
        limit    => $Total + 1,
        job_name => $JobName,
    );
    if (@jobs < $Total ) {
        printf STDERR "DEBUG: Have only %d runs, silencing error.\n", scalar(@jobs)
            if $Debug;
    }
    else {
        my $SuccessCount = () = grep $_->is_success, @jobs;
        if ( $SuccessCount < $MinSuccess ) {
            printf "Only %d runs out of the last %d were successful for job %s\n", 
                $SuccessCount, $Total, $JobName;
            if (length $out) {
                print "Job output was:\n$out";
            }
            else {
                print "The job produced no output.\n";
            }
            print "----\nThe exit code was $exit_code.\n";
        }
    }
}

exit $exit_code;
